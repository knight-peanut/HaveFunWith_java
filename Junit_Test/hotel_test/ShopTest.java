/*
 * This file was automatically generated by EvoSuite
 * Sat Oct 26 00:46:24 GMT 2019
 */

package net.mooctest;

import org.junit.Test;
import static org.junit.Assert.*;

public class ShopTest {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 876.8, 910);
      int int0 = shop0.addProduct(product0);
      int int1 = shop0.searchProduct("");
      assertFalse(int1 == int0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Shop shop0 = new Shop();
      int int0 = shop0.searchProduct("V0");
      assertEquals((-1), int0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("s", 876.8, 901);
      shop0.addProduct(product0);
      int int0 = shop0.sellProduct("s", 1);
      assertEquals(900, int0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 876.8, 910);
      shop0.addProduct(product0);
      Product product1 = shop0.getProductByName("");
      assertEquals(876.8, product1.getPaymentPrice(), 0.01);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("s", 876.8, 901);
      shop0.addProduct(product0);
      Product product1 = shop0.getProductByName("t");
      assertNull(product1);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 1.0, 910);
      shop0.addProduct(product0);
      Product product1 = shop0.updateProduct("", 910, 1.0);
      assertEquals(910.0, product1.price, 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 1.0, 910);
      shop0.addProduct(product0);
      // Undeclared exception!
      try { 
        shop0.sellProduct("", 0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Count cannot less than 0.
         //
//         verifyException("net.mooctest.Shop", e);
      }
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Shop shop0 = new Shop();
      // Undeclared exception!
      try { 
        shop0.sellProduct("}!'b<`cro\u0001i;", 198);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Product is not exists.
         //
//         verifyException("net.mooctest.Shop", e);
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("n", 863, 863);
      shop0.addProduct(product0);
      // Undeclared exception!
      try { 
        shop0.sellProduct("n", 1930);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Quantity of remaining products is not enough.
         //
//         verifyException("net.mooctest.Shop", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Shop shop0 = new Shop();
      // Undeclared exception!
      try { 
        shop0.deletProduct("=7");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Product is not exists.
         //
//         verifyException("net.mooctest.Shop", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 876.8, 910);
      shop0.addProduct(product0);
      shop0.deletProduct("");
      // Undeclared exception!
      try { 
        shop0.updateProduct("", 1.0, 1.0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // Product is not exists.
         //
//         verifyException("net.mooctest.Shop", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 1.0, 910);
      shop0.addProduct(product0);
      int int0 = shop0.addProduct(product0);
      assertEquals(1820, product0.count);
      assertEquals(0, int0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Shop shop0 = new Shop();
      Product product0 = new Product("", 876.8, 910);
      shop0.addProduct(product0);
      String string0 = shop0.getAllProductsInfo();
      assertEquals("No.1\nName\uFF1A\nPrice\uFF1A876.80Yuan\nDiscount: No discount\nQuantity\uFF1A910\n", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Shop shop0 = new Shop();
      String string0 = shop0.getAllProductsInfo();
      assertEquals("", string0);
  }
}
